---
- name: gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags: [ always ]

- block:
    - name: rpm key
      become: true
      rpm_key:
        key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    - name: yum repository
      become: true
      yum_repository:
        name: elasticsearch
        description: elasticsearch-7.x
        baseurl: https://artifacts.elastic.co/packages/7.x/yum
  when: ansible_pkg_mgr == 'yum'

- block:
    - name: add key
      become: true
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    - name: apt repository
      become: true
      apt_repository:
        repo: 'deb https://artifacts.elastic.co/packages/7.x/apt stable main'
  when: ansible_pkg_mgr == 'apt'

- name: install
  become: true
  package:
    name: kibana
    state: present

- name: backup the original config file
  become: true
  command: "cp -af {{ kibana_config_file }} {{ kibana_config_file }}.orig"
  args:
    creates: "{{ kibana_config_file }}.orig"

- name: generate config file
  become: true
  template:
    src: kibana.yml.j2
    dest: "{{ kibana_config_file }}"
    owner: root
    group: root
    mode:  '0644'
  notify: kibana restart

- name: auto start
  become: true
  service:
    name: kibana
    enabled: yes
  notify: kibana restart

- name: get sha256 in kibana_config_file
  become: true
  stat:
    path: "{{ kibana_config_file }}"
    checksum_algorithm: sha256
  register: _kibana_config_file_sha256
  tags: [ goss ]

- name: put gossfile
  become: true
  template:
    src: goss.yml.j2
    dest: "{{ goss_dir }}/kibana.yml"
    owner: root
    group: root
    mode: '0600'
  when: goss_dir is defined
  tags: [ goss ]
