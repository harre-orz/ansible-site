---
- name: gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
  - "{{ ansible_architecture | lower }}/{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_architecture | lower }}/{{ ansible_distribution | lower }}.yml"
  - "{{ ansible_architecture | lower }}/{{ ansible_os_family | lower }}.yml"
  - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
  - "{{ ansible_distribution | lower }}.yml"
  - "{{ ansible_os_family | lower }}.yml"
  tags: always

- name: install
  become: yes
  package:
    name:
    - nginx
    - "{{ nginx_python_passlib }}"
  notify: nginx restart

- name: backup original config
  become: yes
  command: cp -ap {{ nginx_config_file }} {{ nginx_config_file }}.orig
  args:
    creates: "{{ nginx_config_file }}.orig"

- name: create nginx group
  group:
    name: nginx
    system: yes

- name: create nginx user
  user:
    name: nginx
    group: nginx
    system: yes
    shell: /sbin/nologin
    home: /var/lib/nginx
    createhome: no

- name: put config file
  become: yes
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"
  notify: nginx reload
  tags: reconfigure

- name: auto start
  service:
    name: nginx
    state: started
    enabled: yes
