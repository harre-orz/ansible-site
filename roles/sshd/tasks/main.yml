---
- name: Debian固有の変数を取り込む
  include_vars: "os_{{ ansible_os_family }}.yml"
  when: ansible_os_family == "Debian"
  tags: [ always ]

- name: 設定ファイルをバックアップ
  shell: "cp -af {{ sshd_conf }} {{ sshd_conf }}.org"
  args:
    creates: "{{ sshd_conf }}.org"
  tags: [ sshd ]

- name: sshusersグループを作成
  group:
    name: sshusers
  tags: [ sshd ]

- name: "{{ ansible_ssh_user }}にsshusersグループを追加"
  user:
    name: "{{ ansible_ssh_user }}"
    groups: sshusers
    append: yes
  tags: [ sshd ]

- name: 公開ポート番号を設定
  lineinfile:
    path: "{{ sshd_conf }}"
    insertafter: "^#Port "
    regexp: "^Port "
    line: "Port {{ sshd_port | int }}"
  notify: sshd restart
  tags: [ sshd ]

- name: アドレスファミリーを設定
  lineinfile:
    path: "{{ sshd_conf }}"
    insertafter: "^#AddressFamily "
    regexp: "^AddressFamily "
    line: "AddressFamily {{ sshd_addrspec }}"
  notify: sshd restart
  tags: [ sshd ]

- name: 待ち受けアドレス/ポートを設定
  blockinfile:
    path: "{{ sshd_conf }}"
    insertafter: "^#ListenAddress "
    block: |
      {% for sa in sshd_listen %}
      {%   if sa.ipv4 is defined and ipv6 is not defined %}ListenAddress {{  sa.ipv4  }}{% if sa.port is defined %}:{{ sa.port | int }}{% endif %}
      {% elif sa.ipv6 is defined and ipv4 is not defined %}ListenAddress [{{ sa.ipv6 }}]{% if sa.port is defined %}:{{ sa.port | int }}{% endif %}
      {% else %}ListenAddress x.x.x.x
      {% endif %}

      {% endfor %}
    validate: "{{ sshd_executable }} -t -f %s"
  notify: sshd restart
  tags: [ sshd ]

- name: 設定ファイルの変更項目を定義
  set_fact:
    sshd_config_params:
      - { name: AllowGroups, value: sshusers }
      - { name: ChallengeResponseAuthentication, value: 'no' }
      - { name: UsePAM, value: 'yes' }
      - { name: UseDNS, value: 'no' }
      - { name: PasswordAuthentication, value: "{% if sshd_ask_pass == True %}yes{% else %}no{% endif %}" }
      - { name: PermitRootLogin, value: "{{ sshd_permit_root_login }}" }
  tags: [ always ]

- name: 変更項目に従い設定変更
  lineinfile:
    path: "{{ sshd_conf }}"
    insertafter: "^#{{ item.name }} "
    regexp: "^{{ item.name }} "
    line: "{{ item.name }} {{ item.value }}"
    validate: "{{ sshd_executable }} -t -f %s"
  with_items: "{{ sshd_config_params }}"
  notify: sshd restart
  tags: [ sshd ]

- name: 自動起動
  service:
    name: "{{ sshd_service }}"
    state: started
    enabled: yes
  notify: sshd restart
  tags: [ sshd, start ]

- name: テストファイルを配置
  copy:
    content: |
      service:
        sshd:
          running: true
          enabled: true
      port:
      {% if sshd_listen | length > 0 %}
      {% for sa in sshd_listen %}
      {% if sa.ipv4 is defined and sa.ipv6 is not defined %}
        tcp:{{ sa.port | default(sshd_port) }}:
          listening: true
          ip:
            - "{{ sa.ipv4 | ipv4 }}"
      {% endif %}
      {% if sa.ipv6 is defined and sa.ipv4 is not defined %}
        tcp6:{{ sa.port | default(sshd_port) }}:
          listening: true
          ip:
            - "{{ sa.ipv6 | ipv6 }}"
      {% endif %}
      {% endfor %}
      {% else %}
      {% if sshd_addrspec != "inet6" %}
        tcp:{{ sshd_port | int }}:
          listening: true
          ip:
            - "0.0.0.0"
      {% endif %}
      {% if sshd_addrspec != "inet" %}
        tcp6:{{ sshd_port | int }}:
          listening: true
          ip:
            - "::"
      {% endif %}
      {% endif %}
      user:
        {{ ansible_ssh_user }}:
          exists: true
          groups:
            - "sshusers"
      group:
        sshusers:
          exists: true
      file:
        {{ sshd_conf }}:
          exists: true
          contains:
      {% for item in sshd_config_params %}
            - "/^{{ item.name }} {{ item.value }}$/"
      {% endfor %}
    dest: "{{ goss_workdir }}/sshd.yml"
  tags: [ sshd, goss ]
