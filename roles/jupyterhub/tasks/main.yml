---
- name: systemdの確認
  assert:
    that: ansible_service_mgr == "systemd"
  tags: [ jupyterhub ]

- name: OS別のインストール処理に分岐
  include: "install_{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
  tags: [ always ]

- name: configurable-http-proxyのインストール
  npm:
    name: configurable-http-proxy
    global: yes
  notify: jupyterhub restart
  tags: [ jupyterhub ]

- name: jupyterのインストール
  pip:
    name:
      - notebook
      - jupyterhub
      - jupyter_contrib_nbextensions
      - bash_kernel
      - ipywidgets
      - git+https://github.com/NII-cloud-operation/Jupyter-multi_outputs.git
    executable: "{{ jupyterhub_pip3_executable }}"
  notify: jupyterhub restart
  tags: [ jupyterhub ]

- name: ディレクトリを作成
  file:
    path: /etc/jupyterhub/
    state: directory
  tags: [ jupyterhub ]

- name: デフォルトの設定ファイルを生成
  shell: "{{ jupyterhub_executable }} --generate-config"
  args:
    chdir: /etc/jupyterhub/
    creates: /etc/jupyterhub/jupyterhub_config.py
  tags: [ jupyterhub ]

- name: 設定ファイルのバックアップ
  shell: cp -af /etc/jupyterhub/jupyterhub_config.py /etc/jupyterhub/jupyterhub_config.py.org
  args:
    creates: /etc/jupyterhub/jupyterhub_config.py.org
  tags: [ jupyterhub ]

- name: 設定変更
  lineinfile:
    path: /etc/jupyterhub/jupyterhub_config.py
    regexp: "^import {{ item }}"
    line: "import {{ item }}"
    insertbefore: "^$"
    firstmatch: yes
  notify: jupyterhub restart
  with_items:
    - subprocess
  tags: [ jupyterhub ]

- name: 設定変更
  lineinfile:
    path: /etc/jupyterhub/jupyterhub_config.py
    insertafter: "^#{{ item.name }} ="
    regexp: "^{{ item.name }} ="
    line: "{{ item.name }} = {{ item.value }}"
  with_items:
    - { name: "c.JupyterHub.hub_port", value: 8002 }
    - { name: "c.PAMAuthenticator.open_sessions", value: 'False' }
    - { name: "c.Spawner.pre_spawn_hook", value: "lambda spawner: subprocess.check_call(['/etc/jupyterhub/bootstrap.sh', spawner.user.name])" }
    - name: "c.Authenticator.whitelist"
      value: >-
        {% if jupyterhub_users | length == 0 %}
        set()
        {% else %}
        {\" {{ jupyterhub_users | join('\", \"') }} \"}
        {% endif %}
  notify: jupyterhub restart
  tags: [ jupyterhub ]

- name: スクリプトの配置
  copy:
    src: "{{ item }}"
    dest: "/etc/jupyterhub/{{ item }}"
    mode: preserve
  with_items:
    - bootstrap.sh
    - 00-requires.py
  notify: jupyterhub restart
  tags: [ jupyterhub ]

- name: systemdファイルを配置
  copy:
    content: |
      [Unit]
      Description = JupyterHub

      [Service]
      ExecStart = "{{ jupyterhub_executable }}" --config=/etc/jupyterhub/jupyterhub_config.py
      Restart = always
      Type = simple

      [Install]
      WantedBy = multi-user.target
    dest: /etc/systemd/system/jupyterhub.service
  notify: jupyterhub restart
  tags: [ jupyterhub ]

- name: 自動起動
  service:
    name: jupyterhub
    state: started
    enabled: yes
    daemon_reload: yes
  tags: [ jupyterhub, start ]

- name: テストファイルを配置
  copy:
    content: |
      service:
        jupyterhub:
          running: true
          enabled: true
      port:
        tcp6:8000:
          listening: true
          ip:
            - '::'
        tcp:8001:
          listening: true
          ip:
            - '127.0.0.1'
        tcp:8002:
          listening: true
          ip:
            - '127.0.0.1'
    dest: /usr/local/share/goss/jupyterhub.yml
  tags: [ jupyterhub, goss ]
